PARTUPGRADE:NEEDS[ProfileDefault]
{
	name = Upgrade-Slots_advScienceTech
	partIcon = kerbalism-chemicalplant
	techRequired = advScienceTech
	entryCost = 20000
	title = Life support and Chemical plant slot upgrade
	manufacturer = Lambda Aerospace
	description = Adds an additional configurable slot to a Lab/Hab.
}

///COLUMBUS LAB LS - supports 2 crew///
@PART[ht2_moduleColumbus]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Columbus</color> :
}

@PART[ht2_moduleColumbus]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: fuel cell fuelcell water recycler waste processor anthraquinone soe: 

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = Fuel cell
		capacity = #$/CrewCapacity$
		@capacity *= 5
	    valve_i = 2
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Fuel Cell
		capacity = #$/CrewCapacity$
	    valve_i = 1
		running = false
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = advElectrics
				slots = 2
			}
		}

		SETUP
		{
			name = Monoprop Oxygen Fuel Cell
			desc = Burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
			tech = survivability
			mass = 0.1
			cost = 1000

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = advElectrics
			mass = 0.05
			cost = 2500
			valve_i = 1

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}
	}
	
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		running = false
	}

	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _Anthraquinone
		title = Anthraquinone process
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = SOE
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat recyclers
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = recycling
				slots = 2
			}
			UPGRADE
			{
				name__ = Upgrade-Slots_advScienceTech
				techRequired__ = advScienceTech
				slots = 3
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = shortTermHabitation
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Anthraquinone Process
			desc = Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
			tech = advScienceTech
			mass = 0.1
			cost = 3500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Anthraquinone
			}
		}

		SETUP
		{
			name = Solid Oxide Electrolysis
			desc = Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
			tech = experimentalScience
			mass = 0.15
			cost = 4500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SOE
			}
		}
	}
}

@PART[ht2_moduleCupola]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Cupola</color> :
}


///DESTINY LAB LS - supports 3 crew///
@PART[ht2_moduleDestiny]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Destiny</color> :
}

@PART[ht2_moduleDestiny]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: water recycler waste processor electrolysis sabatier:

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		running = false
	}

	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = Water electrolysis
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = Sabatier process
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat recyclers
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = specializedElectrics
				slots = 3
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = shortTermHabitation
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Water Electrolysis
			desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
			tech = specializedElectrics
			mass = 0.05
			cost = 1500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
			}
		}

		SETUP
		{
			name = Sabatier Process
			desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.
			tech = specializedElectrics
			mass = 0.05
			cost = 1500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
			}
		}
	}
}

///HARMONY NODE LS - supports 6 crew///
@PART[ht2_moduleHarmony]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Harmony (Node 2)</color> :
}

@PART[ht2_moduleHarmony]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: scrubber pressure:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		techRequired = survivability
		capacity = #$/CrewCapacity$
		@capacity *= 2.5
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		techRequired = enhancedSurvivability
		capacity = #$/CrewCapacity$
		@capacity *= 2.5
		running = true
	}
}

///KIBO LOGISTICS LS///
@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,!B9PartSwitch,CommunityResourcePack,ProfileDefault]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: container food water waste sewage:
	%ContainerVolume = 2000

	MODULE
	{
		name = Configure
		title = Supply Container
		slots = 1
		symmetric = true

		SETUP
		{
			name = Supplies	//	Ratio of Food and Water amounts are the same as a Kerbals intake
			desc = Store a balanced supply of <b>Food</b> and <b>Water</b>.

			RESOURCE
			{
				name = Food
				amount = 0.7221584
				maxAmount = 0.7221584
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}

			RESOURCE
			{
				name = Water
				amount = 0.2778416
				maxAmount = 0.2778416
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Food

			RESOURCE
			{
				name = Food
				amount = 1
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Water

			RESOURCE
			{
				name = Water
				amount = 1
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Sewage	//	Ratio of Waste and WasteWater amounts are the same as a Kerbals output
			desc = Store solid and liquid organic <b>Waste</b>.

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 0.4946378
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 0.5053622
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Waste

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = WasteWater

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}
	}
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,B9PartSwitch,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: container food water waste sewage:

	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Water]:HAS[#tankType[HT2Water]]]
	{
		-SUBTYPE[Water]:HAS[#tankType[HT2Water]] { }
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = tankSwitch1
		switcherDescription = Container	Type
		baseVolume = 2000

		SUBTYPE
		{
			name = Food
			tankType = Food
			title = Food
		}

		SUBTYPE
		{
			name = Water
			tankType = Water
			title = Water
		}

		SUBTYPE
		{
			name = Supplies
			tankType = Supplies
			title = Supplies
		}

		SUBTYPE
		{
			name = Waste
			tankType = Waste
			title = Waste
		}

		SUBTYPE
		{
			name = WasteWater
			tankType = WasteWater
			title = Wet Waste
		}

		SUBTYPE
		{
			name = Sewage
			tankType = Sewage
			title = Sewage
		}
	}
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2]:AFTER[zzzKerbalismDefault]
{
	@description ^= :^:<color=green>Japanese Experiment Module (JEM-ELM)</color> :
	%CrewCapacity = 1

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,CommunityCategoryKit]:AFTER[zzzKerbalismDefault]
{
	%tags = #$tags$ cck-containers cck-lifesupport
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,CommunityCategoryKit,!FilterExtensions]:AFTER[zzzKerbalismDefault]
{
	%category = none 
}

@PART[ht2_moduleJEMlogistics]:HAS[!MODULE[ModuleInventoryPart]]:NEEDS[HabTech2,SquadExpansion/Serenity]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: inventory:

	MODULE
	{
		name = ModuleInventoryPart		
		InventorySlots = 12
	}		
}

///KIBO LAB LS - supports 5 crew///
@PART[ht2_moduleKibo]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Japanese Experiment Module (JEM) aka. Kibo</color> :
}

@PART[ht2_moduleKibo]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: water recycler waste processor haber hydrazine production monoprop:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		running = false
	}

	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = Haber process
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _HydrazineProduction
		title = Hydrazine production
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat recyclers
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots_advScienceTech
				techRequired__ = advScienceTech
				slots = 3
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = shortTermHabitation
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Haber Process
			desc = Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
			tech = advScienceTech
			mass = 0.05
			cost = 2500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Haber
			}
		}

		SETUP
		{
			name = Hydrazine Production
			desc = <b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
			tech = advScienceTech
			mass = 0.05
			cost = 2500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _HydrazineProduction
			}
		}
	}
}

///LAB NODE LS - supports 6 crew///
@PART[ht2_moduleLabNode]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Docking Hub System (DHS) Node 4</color> :
}

@PART[ht2_moduleLabNode]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: scrubber pressure water recycler:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		capacity = #$/CrewCapacity$
		@capacity *= 3
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		capacity = #$/CrewCapacity$
		@capacity *= 3
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		@capacity *= 2
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat atmosphere
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 3
			}
		}

		SETUP
		{
			name = Scrubber
			desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = enhancedSurvivability
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}

			RESOURCE
			{
				name = Nitrogen
				amount = #$/CrewCapacity$
				@amount *= 3
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 3
				@amount *= 500
				@maxAmount *= 500
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 2
				@maxAmount *= 5
			}
		}
	}
}

///Quest Airlock - provides just a pressure control and can be updated to have a scrubber
@PART[ht2_moduleQuest]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Quest (Joint Airlock)</color> :
}

@PART[ht2_moduleQuest]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: pressure scrubber:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		capacity = #$/CrewCapacity$
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Airlock
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 2
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = enhancedSurvivability
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}

			RESOURCE
			{
				name = Nitrogen
				amount = #$/CrewCapacity$
				maxAmount = #$/CrewCapacity$
				@amount *= 500
				@maxAmount *= 500
			}
		}

		SETUP
		{
			name = Scrubber
			desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			tech = electronics
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}
	}
}

///UNITY NODE LS - supports 4 crew///
@PART[ht2_moduleUnity]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Unity (Node 1)</color> :
}

@PART[ht2_moduleUnity]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: scrubber pressure:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		techRequired = survivability
		capacity = #$/CrewCapacity$
		@capacity *= 2
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		techRequired = enhancedSurvivability
		capacity = #$/CrewCapacity$
		@capacity *= 2
		running = true
	}
}

///MPLM LS///
@PART[ht2_MPLM]:NEEDS[HabTech2,!B9PartSwitch,CommunityResourcePack,ProfileDefault]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: food water waste sewage:
	%ContainerVolume = 3000

	MODULE
	{
		name = Configure
		title = Supply Container
		slots = 1
		symmetric = true

		SETUP
		{
			name = Supplies	//	Ratio of Food and Water amounts are the same as a Kerbals intake
			desc = Store a balanced supply of <b>Food</b> and <b>Water</b>.

			RESOURCE
			{
				name = Food
				amount = 0.7221584
				maxAmount = 0.7221584
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}

			RESOURCE
			{
				name = Water
				amount = 0.2778416
				maxAmount = 0.2778416
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Food

			RESOURCE
			{
				name = Food
				amount = 1
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Water

			RESOURCE
			{
				name = Water
				amount = 1
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Sewage	//	Ratio of Waste and WasteWater amounts are the same as a Kerbals output
			desc = Store solid and liquid organic <b>Waste</b>.

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 0.4946378
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 0.5053622
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Waste

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = WasteWater

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = 1
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}
	}
}

@PART[ht2_MPLM]:NEEDS[HabTech2,B9PartSwitch,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: food water waste sewage:

	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Water]:HAS[#tankType[HT2Water]]]
	{
		-SUBTYPE[Water]:HAS[#tankType[HT2Water]] { }
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = tankSwitch1
		switcherDescription = Container	Type
		baseVolume = 3000

		SUBTYPE
		{
			name = Food
			tankType = Food
			title = Food
		}
		SUBTYPE
		{
			name = Water
			tankType = Water
			title = Water
		}
		SUBTYPE
		{
			name = Supplies
			tankType = Supplies
			title = Supplies
		}
		SUBTYPE
		{
			name = Waste
			tankType = Waste
			title = Waste
		}
		SUBTYPE
		{
			name = WasteWater
			tankType = WasteWater
			title = Wet Waste
		}
		SUBTYPE
		{
			name = Sewage
			tankType = Sewage
			title = Sewage
		}
	}
}

@PART[ht2_MPLM]:NEEDS[HabTech2]:AFTER[zzzKerbalismDefault]
{
	@description ^= :^:<color=green>Multi-Purpose Logistics Module (MPLM)</color> :

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
}

@PART[ht2_MPLM]:NEEDS[HabTech2,CommunityCategoryKit]:AFTER[zzzKerbalismDefault]
{
	%tags = #$tags$ cck-containers cck-lifesupport
}

@PART[ht2_MPLM]:NEEDS[HabTech2,CommunityCategoryKit,!FilterExtensions]:AFTER[zzzKerbalismDefault]
{
	%category = none 
}

@PART[ht2_MPLM]:HAS[!MODULE[ModuleInventoryPart]]:NEEDS[HabTech2,SquadExpansion/Serenity]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: inventory:

	MODULE
	{
		name = ModuleInventoryPart		
		InventorySlots = 18
	}		
}

@PART[ht2_*]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}
}

-B9_TANK_TYPE[ht2_02]:NEEDS[HabTech2,B9PartSwitch,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault] { }

@PART[ht2_questPod]:NEEDS[HabTech2,!B9PartSwitch,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: oxygen nitrogen hydrogen ammonia carbondioxide co2 xenon:
	%ContainerVolume = 40

	MODULE
	{
		name = Configure
		title = Pressurized Tank
		slots = 1
		symmetric = true

		SETUP
		{
			name = Oxygen	// Stored at 200 bar (2940psi) when full
			desc = Store pressurized <b>Oxygen</b> gas @ 200 bar.

			RESOURCE
			{
				name = Oxygen
				amount = 200
				maxAmount = 200
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Nitrogen	// Stored at 180 bar (2646psi) when full
			desc = Store pressurized <b>Nitrogen</b> gas @ 180 bar.

			RESOURCE
			{
				name = Nitrogen
				amount = 180
				maxAmount = 180
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Hydrogen	// Stored at 700 bar (10290psi) when full
			desc = Store pressurized <b>Hydrogen</b> gas @ 700 bar.

			RESOURCE
			{
				name = Hydrogen
				amount = 700
				maxAmount = 700
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Ammonia	// Stored at 35 bar (515psi) when full
			desc = Store pressurized <b>Ammonia</b> gas @ 35 bar.

			RESOURCE
			{
				name = Ammonia
				amount = 35
				maxAmount = 35
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = CarbonDioxide	// Stored at 60bar (882psi) when full
			desc = Store pressurized <b>Carbon dioxide</b> gas @ 60 bar.

			RESOURCE
			{
				name = CarbonDioxide
				amount = 60
				maxAmount = 60
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}

		SETUP
		{
			name = Xenon Gas	Stored at 85 bar (1250psi) when full
			desc = Store pressurized <b>Xenon</b> gas @ 85 bar.
			tech = ionPropulsion

			RESOURCE
			{
				name = XenonGas
				amount = 85
				maxAmount = 85
				@amount *= #$/ContainerVolume$
				@maxAmount *= #$/ContainerVolume$
			}
		}
	}
}

@PART[ht2_questPod]:NEEDS[HabTech2,B9PartSwitch,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: oxygen nitrogen hydrogen ammonia carbondioxide co2 xenon:

	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Water]:HAS[#tankType[HT2Water]]]
	{
		-SUBTYPE[Water]:HAS[#tankType[HT2Water]] { }
	}
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[02]:HAS[#tankType[ht2_02]]]
	{
		-SUBTYPE[02]:HAS[#tankType[ht2_02]] { }
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Oxygen]]
	{
		SUBTYPE
		{
			name = Oxygen
			tankType = Oxygen
			title = Oxygen
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Nitrogen]]
	{
		SUBTYPE
		{
			name = Nitrogen
			tankType = Nitrogen
			title = Nitrogen
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Hydrogen]]
	{
		SUBTYPE
		{
			name = Hydrogen
			tankType = Hydrogen
			title = Hydrogen
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Ammonia]]
	{
		SUBTYPE
		{
			name = Ammonia
			tankType = Ammonia
			title = Ammonia
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[CarbonDioxide]]
	{
		SUBTYPE
		{
			name = CarbonDioxide
			tankType = CarbonDioxide
			title = CO2
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[XenonGas]]
	{
		SUBTYPE
		{
			name = XenonGas
			tankType = XenonGas
			title = Xenon Gas
		}
	}
}

@PART[ht2_*]:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#tankType[ht2_02]]]]:NEEDS[HabTech2,B9PartSwitch,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
		@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE:HAS[#tankType[ht2_02]]]
		{
				@SUBTYPE:HAS[#tankType[ht2_02]]
				{
						@tankType = Oxygen
				}
		}
}

// @PART[ht2_questPod]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
// {
	// @description ^= :^:<color=green>unidentified</color> :
// }

@PART[ht2_questPod]:NEEDS[HabTech2,CommunityCategoryKit]:AFTER[zzzKerbalismDefault]
{
	%tags = #$tags$ cck-containers cck-lifesupport
}

@PART[ht2_questPod]:NEEDS[HabTech2,CommunityCategoryKit,!FilterExtensions]:AFTER[zzzKerbalismDefault]
{
	%category = none 
}

// @PART[ht2_questRack]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
// {
	// @description ^= :^:<color=green>unidentified</color> :
// }

@PART[ht2_*]:HAS[@MODULE[Configure]:HAS[#title[Pod]]]:NEEDS[HabTech2,ProfileDefault]:AFTER[zzzKerbalismDefault]
{
	-MODULE[Configure]:HAS[#title[Pod]] { }
}
